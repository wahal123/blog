1、使用ansible的script模块把所有的已使用的磁盘的和算出来，并将执行的数据导入到文件中

脚本名：used_volume.sh  
脚本内容：df  |awk '{SUM+=$3};END{print SUM}'  
命令：ansible all -m script -a ‘used_volume.sh’ |tee -a volume_temp.txt

2、对导入的文件进行二次过滤，只导出第一列和第五列，写入到另一个文件中

命令：awk ‘{print $1,$5}’ volume_temp.txt|tee -a used_volume.txt

3、将第二部产生的文件下载到本地，然后使用python脚本进行解析

python脚本如下：

```text-plain
import re
Anode_file="a_ansible_used1.txt"
Bnode_file="bnode_ansible_used.txt"
with open('./'+Bnode_file) as f :
    context=f.readlines()
    context=str(context)
    context=context.replace('\\n','')
    context=context.replace('\'','')
    context=context.replace(',','')
    # pattern=re.compile('\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')
    # matchobj=re.match(pattern,context)
    # print(matchobj)
    context=context.split('} ')
    new_context={}
    for i in context:
        line_ip=i.split('{')[0].strip(' []')
        if line_ip == '':
            continue
        line_ip=line_ip.replace('[','')
        pattern=re.compile('.*\"stdout_lines\":.*"(\d*)\"')
        matched=re.match(pattern,i)
        if not matched:
            new_context[line_ip]=''
            continue
        disk_value=matched.group(1).strip()
        new_context[line_ip]=disk_value
total_value=0
with open('./bnode_trim_data.txt','w+',encoding='utf8') as newf:
    for key,value in new_context.items():
        newf.write("服务器:{}   磁盘已使用总量(KB):{}\n".format(key,value))
        print("服务器:{}   磁盘已使用总量(KB):{}\n".format(key, value))
        if value =='':
            value=0
        total_value += float(value)
    newf.write("--"* 20+'\n')
    newf.write("所有节点已使用磁盘数据为:{}KB     {:.3f}GB".format(total_value,total_value/1024/1024))

```
